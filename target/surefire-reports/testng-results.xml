<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="1" total="14" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="calculator" duration-ms="52" started-at="2020-10-04T19:46:31 IST" finished-at="2020-10-04T19:46:31 IST">
    <groups>
    </groups>
    <test name="calc" duration-ms="52" started-at="2020-10-04T19:46:31 IST" finished-at="2020-10-04T19:46:31 IST">
      <class name="org.demo.app.CalculatorTest">
        <test-method status="PASS" signature="init()[pri:0, instance:org.demo.app.CalculatorTest@5f375618]" name="init" is-config="true" duration-ms="9" started-at="2020-10-04T19:46:31 IST" finished-at="2020-10-04T19:46:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method status="PASS" signature="divisionByZeroTest()[pri:0, instance:org.demo.app.CalculatorTest@5f375618]" name="divisionByZeroTest" duration-ms="2" started-at="2020-10-04T19:46:31 IST" finished-at="2020-10-04T19:46:31 IST">
          <exception class="java.lang.ArithmeticException">
            <message>
              <![CDATA[Division can't be perform!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.ArithmeticException: Division can't be perform!
at org.demo.app.Calculator.divison(Calculator.java:26)
at org.demo.app.CalculatorTest.divisionByZeroTest(CalculatorTest.java:100)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:66)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.ArithmeticException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionByZeroTest -->
        <test-method status="PASS" signature="divisionTest()[pri:0, instance:org.demo.app.CalculatorTest@5f375618]" name="divisionTest" duration-ms="2" started-at="2020-10-04T19:46:31 IST" finished-at="2020-10-04T19:46:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divisionTest -->
        <test-method status="PASS" signature="multTest()[pri:0, instance:org.demo.app.CalculatorTest@5f375618]" name="multTest" duration-ms="1" started-at="2020-10-04T19:46:31 IST" finished-at="2020-10-04T19:46:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTest -->
        <test-method status="PASS" signature="exampleTest()[pri:0, instance:org.demo.app.CalculatorTest@5f375618]" name="exampleTest" duration-ms="0" started-at="2020-10-04T19:46:31 IST" finished-at="2020-10-04T19:46:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exampleTest -->
        <test-method status="PASS" signature="multTestWithNegative()[pri:0, instance:org.demo.app.CalculatorTest@5f375618]" name="multTestWithNegative" duration-ms="0" started-at="2020-10-04T19:46:31 IST" finished-at="2020-10-04T19:46:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTestWithNegative -->
        <test-method status="PASS" signature="multTestWithNegative2()[pri:0, instance:org.demo.app.CalculatorTest@5f375618]" name="multTestWithNegative2" duration-ms="0" started-at="2020-10-04T19:46:31 IST" finished-at="2020-10-04T19:46:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTestWithNegative2 -->
        <test-method status="PASS" signature="multTestWithZero()[pri:0, instance:org.demo.app.CalculatorTest@5f375618]" name="multTestWithZero" duration-ms="0" started-at="2020-10-04T19:46:31 IST" finished-at="2020-10-04T19:46:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multTestWithZero -->
        <test-method status="PASS" signature="substractionTestWithZero()[pri:0, instance:org.demo.app.CalculatorTest@5f375618]" name="substractionTestWithZero" duration-ms="0" started-at="2020-10-04T19:46:31 IST" finished-at="2020-10-04T19:46:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- substractionTestWithZero -->
        <test-method status="PASS" signature="substractionTest()[pri:0, instance:org.demo.app.CalculatorTest@5f375618]" name="substractionTest" duration-ms="0" started-at="2020-10-04T19:46:31 IST" finished-at="2020-10-04T19:46:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- substractionTest -->
        <test-method status="PASS" signature="substractionTestWithNegative()[pri:0, instance:org.demo.app.CalculatorTest@5f375618]" name="substractionTestWithNegative" duration-ms="0" started-at="2020-10-04T19:46:31 IST" finished-at="2020-10-04T19:46:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- substractionTestWithNegative -->
        <test-method status="PASS" signature="sumTest()[pri:0, instance:org.demo.app.CalculatorTest@5f375618]" name="sumTest" duration-ms="0" started-at="2020-10-04T19:46:31 IST" finished-at="2020-10-04T19:46:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumTest -->
        <test-method status="PASS" signature="sumTestWithNegative()[pri:0, instance:org.demo.app.CalculatorTest@5f375618]" name="sumTestWithNegative" duration-ms="0" started-at="2020-10-04T19:46:31 IST" finished-at="2020-10-04T19:46:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumTestWithNegative -->
        <test-method status="PASS" signature="sumTestWithZero()[pri:0, instance:org.demo.app.CalculatorTest@5f375618]" name="sumTestWithZero" duration-ms="0" started-at="2020-10-04T19:46:31 IST" finished-at="2020-10-04T19:46:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumTestWithZero -->
      </class> <!-- org.demo.app.CalculatorTest -->
    </test> <!-- calc -->
  </suite> <!-- calculator -->
</testng-results>
